# 1. Создать список и заполнить его элементами различных типов данных. Реализовать скрипт проверки типа данных
# каждого элемента. Использовать функцию type() для проверки типа. Элементы списка можно не запрашивать у
# пользователя, а указать явно, в программе.

scrl = [12, None, -77, 'True', True, 9.5]

def type_scrl():
   print(list(map(type, scrl)))
   return


type_scrl()

# 2. Для списка реализовать обмен значений соседних элементов. Значениями обмениваются элементы с индексами 0 и 1,
# 2 и 3 и т. д. При нечётном количестве элементов последний сохранить на своём var = месте.Для заполнения списка
# элементов нужно использовать функцию input().

el_count = int(input("Введите количество элементов списка "))
my_list = []
i = 0
el = 0
while i < el_count:
    my_list.append(input("Введите следующее значение списка "))
    i += 1

for elem in range(int(len(my_list) / 2)):
    my_list[el], my_list[el + 1] = my_list[el + 1], my_list[el]
    el += 2
print(my_list)

# 3. Пользователь вводит месяц в виде целого числа от 1 до 12. Сообщить, к какому времени года относится месяц (зима,
# весна, лето, осень). Напишите решения через list и dict.




# 4. Пользователь вводит строку из нескольких слов, разделённых пробелами. Вывести каждое слово с новой строки.
# Строки нужно пронумеровать. Если слово длинное, выводить только первые 10 букв в слове.

my_str = input("введите строку ")
my_word = []
num = 1
for el in range(my_str.count(' ') + 1):
    my_word = my_str.split()
    if len(str(my_word)) <= 10:
        print(f" {num} {my_word [el]}")
        num += 1
    else:
        print(f" {num} {my_word [el] [0:10]}")
        num += 1

# 5. Реализовать структуру «Рейтинг», представляющую собой набор натуральных чисел, который не возрастает. У
# пользователя нужно запрашивать новый элемент рейтинга. Если в рейтинге существуют элементы с одинаковыми
# значениями, то новый элемент с тем же значением должен разместиться после них.

my_list = [7, 5, 3, 3, 2]
print(f"Рейтинг - {my_list}")
digit = int(input("Введите число (111 - выход) "))
while digit != 111:
    for el in range(len(my_list)):
        if my_list[el] == digit:
            my_list.insert(el + 1, digit)
            break
        elif my_list[0] < digit:
            my_list.insert(0, digit)
        elif my_list[-1] > digit:
            my_list.append(digit)
        elif my_list[el] > digit > my_list[el + 1]:
            my_list.insert(el + 1, digit)
    print(f"текущий список - {my_list}")
    digit = int(input("Введите число "))

# 6. (Дополнительно) Реализовать структуру данных «Товары». Она должна представлять собой список кортежей. Каждый
# кортеж хранит информацию об отдельном товаре. В кортеже должно быть два элемента — номер товара и словарь с
# параметрами, то есть характеристиками товара: название, цена, количество, единица измерения. Структуру нужно
# сформировать программно, запросив все данные у пользователя.

goods = []
features = {'Наименование': '', 'Цена': '', 'Количество': '', 'Ед. изм.': ''}
analytics = {'Наименование': [], 'Цена': [], 'Количество': [], 'Ед. изм.': []}
num = 0
feature_ = None
control = None
while True:
    control = input("Закончить 'Q', Ввод 'Enter', Анализ 'A': ").upper()
    if control == 'Q':
        break
    num += 1
    if control == 'A':
        print(f'\n Анализ...Завершен \n {"-" * 30}')
        for key, value in analytics.items():
            print(f'{key[:25]:>30}: {value}')
            print("-" * 30)
    for f in features.keys():
        feature_ = input(f'Введите "{f}": ')
        features[f] = int(feature_) if (f == 'price' or f == 'quantity') else feature_
        analytics[f].append(features[f])
    goods.append((num, features))


