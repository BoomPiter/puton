# 1. Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление. Числа запрашивать у
# пользователя, предусмотреть обработку ситуации деления на ноль.


def div():
    try:
        arg1 = int(input("Input dividend - "))
        arg2 = int(input("Input divider - "))
        res = arg1 / arg2
    except ValueError:
        return 'Value error'
    except ZeroDivisionError:
        return "Wrong devider! You can't wse zero as a devider"

    return res


print(div())


# Реализовать функцию, принимающую несколько параметров,
# описывающих данные пользователя: имя, фамилия, год рождения,
# город проживания, email, телефон. Функция должна принимать
# параметры как именованные аргументы. Реализовать вывод данных
# о пользователе одной строкой.

def account(name, surname, year, city, email, phone):
    return ' '.join([name, surname, year, city, email, phone])


print(
    account(city="Perm,", name='Alex,', surname='Kharitonov,', year='1998,', phone='88005553535,', email='email@gmail'
                                                                                                         '.com'))


# Реализовать функцию my_func(), которая принимает три позиционных
# аргумента, и возвращает сумму наибольших двух аргументов.

def my_func(arg1, arg2, arg3):
    if arg1 >= arg3 and arg2 >= arg3:
        return arg1 + arg2
    elif arg1 > arg2 and arg1 < arg3:
        return arg1 + arg3
    else:
        return arg2 + arg3


print(my_func(2, 4, 6))


# Программа принимает действительное положительное число x и целое отрицательное число y. Выполните возведение числа
# x в степень y. Задание реализуйте в виде функции my_func(x, y). При решении задания нужно обойтись без встроенной
# функции возведения числа в степень.

def x_pow(x, y):
    a = x ** y
    return a


print(x_pow(2, -3))


# Программа запрашивает у пользователя строку чисел, разделённых пробелом. При нажатии Enter должна выводиться сумма
# чисел. Пользователь может продолжить ввод чисел, разделённых пробелом и снова нажать Enter. Сумма вновь введённых
# чисел будет добавляться к уже подсчитанной сумме. Но если вместо числа вводится специальный символ, выполнение
# программы завершается. Если специальный символ введён после нескольких чисел, то вначале нужно добавить сумму этих
# чисел к полученной ранее сумме и после этого завершить программу.

def summa():
    sum_res = 0
    ex = False
    while not ex:
        num = input("Enter numders or Q for quit - ").split()

        res = 0
        for el in range(len(num)):
            if num[el] == 'q' or num[el] == 'Q':
                ex = True
                break
            else:
                res = res + int(num[el])
        sum_res = sum_res + res
        print('sum = ', sum_res)
    print('final sum = ', sum_res)


summa()


# Реализовать функцию int_func(), принимающую слово из маленьких
# латинских букв и возвращающую его же, но с прописной первой буквой.
# Например, print(int_func(‘text’)) -> Text.
# Продолжить работу над заданием. В программу должна попадать
# строка из слов, разделенных пробелом. Каждое слово состоит
# из латинских букв в нижнем регистре. Сделать вывод исходной
# строки, но каждое слово должно начинаться с заглавной буквы.
# Необходимо использовать написанную ранее функцию int_func().

def int_func():
    word = input("Input words ")
    print(word.title())
    return


int_func()
